"""Doctest to check for non matrix inputs"""
=========================================================================
"""matrix_mul"""
=========================================================================
Test begins:
Import matrix_mul
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
Check for list case
    >>> matrix_mul(([100, 100],
    ... [100, 100]), ([10, 10], [9, 8]))
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list
    >>> matrix_mul([1, 2], [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists
    >>> matrix_mul([[1, 2], [1, 2]], [[1, 2], [1, 1]])
    [[3, 4], [3, 4]]
    >>> matrix_mul([[1, 2], [1, 2]], [[1, 2], [1, i]])
    Traceback (most recent call last):
        ...
    NameError: name 'i' is not defined.
    >>> matrix_mul([[1, 2], [1, 2]], [[1, 2], [1,'i']])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats
    >>> matrix_mul([[1, 2], [1, 2]], [[1, 2], [1, -2]])
    [[3, -2], [3, -2]]
    >>> matrix_mul([[1, 2], [1, 2]], [[1, 2], [1, float('inf')]])
    [[3, inf], [3, inf]]
    >>> matrix_mul([[1, 2], [1, 2]], [[1, 2], [1]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size
    >>> matrix_mul([[1, 2], [1, 2]], [[1, 2], [1, 0]])
    [[3, 2], [3, 2]]
    >>> matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
    >>> 
