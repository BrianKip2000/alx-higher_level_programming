"""Testing for matrix divisibility, length and float type"""
=========================================================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided(0)
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided(1, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/developer029/Downloads/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 16, in matrix_divided
    if not all(isinstance(row, list)
TypeError: 'int' object is not iterable
>>> matrix = [
... [1, 2, 3],
... [2, 3, 5]]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [2.0, 3.0, 5.0]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
 ...
ZeroDivisionError: division by zero
>>> matrix = [
... [1.3, 2.4, 5.6]
... ,[1.346, 4.553, 9.224]]
>>> matrix_divided(matrix, 3)
[[0.43, 0.8, 1.87], [0.45, 1.52, 3.07]]
>>> matrix_divided(matrix, 3.3)
[[0.39, 0.73, 1.7], [0.41, 1.38, 2.8]]
>>> matrix_divided(matrix, 3.3876)
[[0.38, 0.71, 1.65], [0.4, 1.34, 2.72]]
>>> matrix_divided(matrix, 'w')
Traceback (most recent call last):
  ...
TypeError: div must be a number
>>> matrix_divided(matrix, float('nan'))
[[nan, nan, nan], [nan, nan, nan]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
